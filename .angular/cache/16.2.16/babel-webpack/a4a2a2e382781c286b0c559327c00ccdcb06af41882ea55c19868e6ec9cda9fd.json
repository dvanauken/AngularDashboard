{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport { SelectionService } from '../selection.service';\nimport { DataService } from '../data.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../selection.service\";\nimport * as i2 from \"../data.service\";\nimport * as i3 from \"@angular/common\";\nfunction TableComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const country_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"selected\", ctx_r0.isSelected(country_r1.ISO_A3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r1.SOVEREIGNT);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 6, country_r1.POP_EST));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(country_r1.ISO_A3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r1.ISO_A2);\n  }\n}\nexport class TableComponent {\n  constructor(selectionService, dataService) {\n    this.selectionService = selectionService;\n    this.dataService = dataService;\n    this.countries = [];\n    this.selectedCountries = [];\n    this.subscription = new Subscription();\n  }\n  ngOnInit() {\n    this.loadData();\n    this.subscription.add(this.selectionService.selectedCountries$.subscribe(countries => {\n      this.selectedCountries = countries;\n    }));\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  loadData() {\n    this.dataService.getWorldData().subscribe(worldData => {\n      this.processWorldData(worldData);\n    }, error => {\n      console.error('Error loading country data:', error);\n    });\n  }\n  processWorldData(worldData) {\n    this.countries = worldData.features.map(feature => ({\n      SOVEREIGNT: feature.properties.SOVEREIGNT,\n      POP_EST: feature.properties.POP_EST,\n      ISO_A3: feature.properties.ISO_A3,\n      ISO_A2: feature.properties.ISO_A2\n    }));\n  }\n  countArcs(arcs) {\n    if (!arcs) return 0;\n    if (Array.isArray(arcs[0])) {\n      return arcs.length;\n    } else {\n      return 1;\n    }\n  }\n  calculateComplexity(arcs) {\n    if (!arcs) return 0;\n    if (Array.isArray(arcs[0])) {\n      return arcs.flat(Infinity).length;\n    } else {\n      return arcs.length;\n    }\n  }\n  isSelected(countryId) {\n    return this.selectedCountries.includes(countryId);\n  }\n  onCheckboxChange(event, countryId) {\n    const isChecked = event.target.checked;\n    let updatedSelection = [...this.selectedCountries];\n    if (isChecked && !updatedSelection.includes(countryId)) {\n      updatedSelection.push(countryId);\n    } else if (!isChecked) {\n      updatedSelection = updatedSelection.filter(id => id !== countryId);\n    }\n    this.selectionService.updateSelection(updatedSelection);\n  }\n  onRowClick(event, countryId) {\n    if (event.shiftKey) {\n      this.addToSelection(countryId);\n    } else if (event.ctrlKey || event.metaKey) {\n      this.toggleSelection(countryId);\n    } else {\n      this.newSelection(countryId);\n    }\n  }\n  addToSelection(countryId) {\n    if (!this.selectedCountries.includes(countryId)) {\n      const updatedSelection = [...this.selectedCountries, countryId];\n      this.selectionService.updateSelection(updatedSelection);\n    }\n  }\n  toggleSelection(countryId) {\n    const updatedSelection = this.selectedCountries.includes(countryId) ? this.selectedCountries.filter(id => id !== countryId) : [...this.selectedCountries, countryId];\n    this.selectionService.updateSelection(updatedSelection);\n  }\n  newSelection(countryId) {\n    this.selectionService.updateSelection([countryId]);\n  }\n  clearSelection() {\n    this.selectionService.clearSelection();\n  }\n  static {\n    this.ɵfac = function TableComponent_Factory(t) {\n      return new (t || TableComponent)(i0.ɵɵdirectiveInject(i1.SelectionService), i0.ɵɵdirectiveInject(i2.DataService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TableComponent,\n      selectors: [[\"app-table\"]],\n      decls: 13,\n      vars: 1,\n      consts: [[3, \"selected\", 4, \"ngFor\", \"ngForOf\"]],\n      template: function TableComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"tr\")(3, \"th\");\n          i0.ɵɵtext(4, \"Sovereign State\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"th\");\n          i0.ɵɵtext(6, \"Population Estimate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"th\");\n          i0.ɵɵtext(8, \"ISO 3166-1 alpha-3\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"th\");\n          i0.ɵɵtext(10, \"ISO 3166-1 alpha-2\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"tbody\");\n          i0.ɵɵtemplate(12, TableComponent_tr_12_Template, 10, 8, \"tr\", 0);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.DecimalPipe],\n      styles: [\"[_nghost-%COMP%] {\\n  display: block;\\n  height: 100%;\\n  overflow: auto;\\n}\\n\\ntable[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-collapse: collapse;\\n  font-family: Arial, sans-serif;\\n}\\n\\nth[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\n  border: 1px solid #ddd;\\n  padding: 8px;\\n  text-align: left;\\n}\\n\\nth[_ngcontent-%COMP%] {\\n  background-color: #f2f2f2;\\n  font-weight: bold;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\ntr[_ngcontent-%COMP%]:nth-child(even) {\\n  background-color: #f9f9f9;\\n}\\n\\ntr[_ngcontent-%COMP%]:hover {\\n  background-color: #f5f5f5;\\n}\\n\\ntr.selected[_ngcontent-%COMP%] {\\n  background-color: #e6f3ff;\\n}\\n\\ntr.selected[_ngcontent-%COMP%]:hover {\\n  background-color: #d9edff;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFibGUvdGFibGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7RUFDQSx5QkFBQTtFQUNBLDhCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxzQkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsTUFBQTtFQUNBLFVBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbnRoLCB0ZCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxudGgge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgcG9zaXRpb246IHN0aWNreTtcclxuICB0b3A6IDA7XHJcbiAgei1pbmRleDogMTtcclxufVxyXG5cclxudHI6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG59XHJcblxyXG50cjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcclxufVxyXG5cclxudHIuc2VsZWN0ZWQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmYzZmY7XHJcbn1cclxuXHJcbnRyLnNlbGVjdGVkOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDllZGZmO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Subscription","SelectionService","DataService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","ctx_r0","isSelected","country_r1","ISO_A3","ɵɵadvance","ɵɵtextInterpolate","SOVEREIGNT","ɵɵpipeBind1","POP_EST","ISO_A2","TableComponent","constructor","selectionService","dataService","countries","selectedCountries","subscription","ngOnInit","loadData","add","selectedCountries$","subscribe","ngOnDestroy","unsubscribe","getWorldData","worldData","processWorldData","error","console","features","map","feature","properties","countArcs","arcs","Array","isArray","length","calculateComplexity","flat","Infinity","countryId","includes","onCheckboxChange","event","isChecked","target","checked","updatedSelection","push","filter","id","updateSelection","onRowClick","shiftKey","addToSelection","ctrlKey","metaKey","toggleSelection","newSelection","clearSelection","ɵɵdirectiveInject","i1","i2","selectors","decls","vars","consts","template","TableComponent_Template","rf","ctx","ɵɵtemplate","TableComponent_tr_12_Template","ɵɵproperty"],"sources":["D:\\code\\webstorm\\AngularDashboard\\src\\app\\table\\table.component.ts","D:\\code\\webstorm\\AngularDashboard\\src\\app\\table\\table.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { SelectionService } from '../selection.service';\r\nimport { DataService } from '../data.service';\r\n\r\ninterface CountryData {\r\n  SOVEREIGNT: string;\r\n  POP_EST: number;\r\n  ISO_A3: string;\r\n  ISO_A2: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss']\r\n})\r\nexport class TableComponent implements OnInit, OnDestroy {\r\n  countries: CountryData[] = [];\r\n  selectedCountries: string[] = [];\r\n  private subscription: Subscription;\r\n\r\n  constructor(\r\n    private selectionService: SelectionService,\r\n    private dataService: DataService\r\n  ) {\r\n    this.subscription = new Subscription();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n    this.subscription.add(\r\n      this.selectionService.selectedCountries$.subscribe(countries => {\r\n        this.selectedCountries = countries;\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  loadData() {\r\n    this.dataService.getWorldData().subscribe(\r\n      (worldData: any) => {\r\n        this.processWorldData(worldData);\r\n      },\r\n      (error: any) => {\r\n        console.error('Error loading country data:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  private processWorldData(worldData: any) {\r\n    this.countries = worldData.features.map((feature: any) => ({\r\n      SOVEREIGNT: feature.properties.SOVEREIGNT,\r\n      POP_EST: feature.properties.POP_EST,\r\n      ISO_A3: feature.properties.ISO_A3,\r\n      ISO_A2: feature.properties.ISO_A2\r\n    }));\r\n  }\r\n\r\n  public countArcs(arcs: any[] | undefined): number {\r\n    if (!arcs) return 0;\r\n    if (Array.isArray(arcs[0])) {\r\n      return arcs.length;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  public calculateComplexity(arcs: any[] | undefined): number {\r\n    if (!arcs) return 0;\r\n    if (Array.isArray(arcs[0])) {\r\n      return arcs.flat(Infinity).length;\r\n    } else {\r\n      return arcs.length;\r\n    }\r\n  }\r\n\r\n  isSelected(countryId: string): boolean {\r\n    return this.selectedCountries.includes(countryId);\r\n  }\r\n\r\n  onCheckboxChange(event: Event, countryId: string) {\r\n    const isChecked = (event.target as HTMLInputElement).checked;\r\n    let updatedSelection = [...this.selectedCountries];\r\n\r\n    if (isChecked && !updatedSelection.includes(countryId)) {\r\n      updatedSelection.push(countryId);\r\n    } else if (!isChecked) {\r\n      updatedSelection = updatedSelection.filter(id => id !== countryId);\r\n    }\r\n\r\n    this.selectionService.updateSelection(updatedSelection);\r\n  }\r\n\r\n  onRowClick(event: MouseEvent, countryId: string) {\r\n    if (event.shiftKey) {\r\n      this.addToSelection(countryId);\r\n    } else if (event.ctrlKey || event.metaKey) {\r\n      this.toggleSelection(countryId);\r\n    } else {\r\n      this.newSelection(countryId);\r\n    }\r\n  }\r\n\r\n  private addToSelection(countryId: string) {\r\n    if (!this.selectedCountries.includes(countryId)) {\r\n      const updatedSelection = [...this.selectedCountries, countryId];\r\n      this.selectionService.updateSelection(updatedSelection);\r\n    }\r\n  }\r\n\r\n  private toggleSelection(countryId: string) {\r\n    const updatedSelection = this.selectedCountries.includes(countryId)\r\n      ? this.selectedCountries.filter(id => id !== countryId)\r\n      : [...this.selectedCountries, countryId];\r\n    this.selectionService.updateSelection(updatedSelection);\r\n  }\r\n\r\n  private newSelection(countryId: string) {\r\n    this.selectionService.updateSelection([countryId]);\r\n  }\r\n\r\n  clearSelection() {\r\n    this.selectionService.clearSelection();\r\n  }\r\n}\r\n","<table>\r\n  <thead>\r\n  <tr>\r\n    <th>Sovereign State</th>\r\n    <th>Population Estimate</th>\r\n    <th>ISO 3166-1 alpha-3</th>\r\n    <th>ISO 3166-1 alpha-2</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr *ngFor=\"let country of countries\" [class.selected]=\"isSelected(country.ISO_A3)\">\r\n    <td>{{country.SOVEREIGNT}}</td>\r\n    <td>{{country.POP_EST | number}}</td>\r\n    <td>{{country.ISO_A3}}</td>\r\n    <td>{{country.ISO_A2}}</td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}