{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.loggedIn = false;\n  }\n  login(username, password) {\n    if (username === 'admin' && password === 'admin') {\n      this.loggedIn = true;\n      return true;\n    }\n    return false;\n  }\n  logout() {\n    this.loggedIn = false;\n  }\n  isLoggedIn() {\n    return this.loggedIn;\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthService","constructor","loggedIn","login","username","password","logout","isLoggedIn","factory","ɵfac","providedIn"],"sources":["D:\\code\\webstorm\\AngularDashboard\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private loggedIn = false;\r\n\r\n  login(username: string, password: string): boolean {\r\n    if (username === 'admin' && password === 'admin') {\r\n      this.loggedIn = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  logout(): void {\r\n    this.loggedIn = false;\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.loggedIn;\r\n  }\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,WAAW;EAHxBC,YAAA;IAIU,KAAAC,QAAQ,GAAG,KAAK;;EAExBC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAChD,IAAI,CAACH,QAAQ,GAAG,IAAI;MACpB,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAEAI,MAAMA,CAAA;IACJ,IAAI,CAACJ,QAAQ,GAAG,KAAK;EACvB;EAEAK,UAAUA,CAAA;IACR,OAAO,IAAI,CAACL,QAAQ;EACtB;;;uBAjBWF,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAQ,OAAA,EAAXR,WAAW,CAAAS,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}