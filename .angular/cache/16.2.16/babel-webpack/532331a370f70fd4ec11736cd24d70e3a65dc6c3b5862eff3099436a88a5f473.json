{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class SelectionService {\n  constructor() {\n    this.selectedCountriesSource = new BehaviorSubject([]);\n    this.selectedCountries$ = this.selectedCountriesSource.asObservable();\n  }\n  updateSelection(countries) {\n    this.selectedCountriesSource.next(countries);\n  }\n  clearSelection() {\n    this.selectedCountriesSource.next([]);\n  }\n  static {\n    this.ɵfac = function SelectionService_Factory(t) {\n      return new (t || SelectionService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SelectionService,\n      factory: SelectionService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","SelectionService","constructor","selectedCountriesSource","selectedCountries$","asObservable","updateSelection","countries","next","clearSelection","factory","ɵfac","providedIn"],"sources":["D:\\code\\webstorm\\AngularDashboard\\src\\app\\selection.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SelectionService {\r\n  private selectedCountriesSource = new BehaviorSubject<string[]>([]);\r\n  selectedCountries$ = this.selectedCountriesSource.asObservable();\r\n\r\n  updateSelection(countries: string[]) {\r\n    this.selectedCountriesSource.next(countries);\r\n  }\r\n\r\n  clearSelection() {\r\n    this.selectedCountriesSource.next([]);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,gBAAgB;EAH7BC,YAAA;IAIU,KAAAC,uBAAuB,GAAG,IAAIH,eAAe,CAAW,EAAE,CAAC;IACnE,KAAAI,kBAAkB,GAAG,IAAI,CAACD,uBAAuB,CAACE,YAAY,EAAE;;EAEhEC,eAAeA,CAACC,SAAmB;IACjC,IAAI,CAACJ,uBAAuB,CAACK,IAAI,CAACD,SAAS,CAAC;EAC9C;EAEAE,cAAcA,CAAA;IACZ,IAAI,CAACN,uBAAuB,CAACK,IAAI,CAAC,EAAE,CAAC;EACvC;;;uBAVWP,gBAAgB;IAAA;EAAA;;;aAAhBA,gBAAgB;MAAAS,OAAA,EAAhBT,gBAAgB,CAAAU,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}